---
// Import types
import type { CollectionEntry } from "astro:content"

// Filter and sort posts
import { filterPosts } from "../lib/filter-posts"
import { sortPosts } from "../lib/sort-posts"

// Import components
import PostCard from "./PostCard.astro"

// Set up props with defaults
interface Props {
  entries?: CollectionEntry<"blog">[]
  filterDraft?: boolean
  filterFuture?: boolean
  filterCategory?: string
  filterAuthor?: string
  limit?: number
  sort?: "asc" | "desc" | "rand"
}

const {
  entries,
  filterDraft = true,
  filterFuture = true,
  filterCategory,
  filterAuthor,
  limit = 20,
  sort = "desc",
} = Astro.props as Props

// Get posts
let posts: CollectionEntry<"blog">[] = entries.filter(
  post => {
    // console.log("PC input", post.data.title, post.data.category)
    return filterPosts(post, filterDraft, filterFuture, filterCategory, filterAuthor)
  })

// console.log("PC filterCategory", filterCategory)
// console.log("PC posts", posts)
// Sort and limit posts
if (posts.length) {
  posts = sortPosts(posts, sort)
  // console.log("PC posts after sort", posts)

  if (limit) {
    posts = posts.slice(0, limit)
    // console.log("PC posts after limit", posts)
  }
}
---

<div class="post-container">
  {posts.length ? posts.map(post => (
    <PostCard {post} />
  )) : (
    <p>No posts yet!</p>
  )}
</div>
